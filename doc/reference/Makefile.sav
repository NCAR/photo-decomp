# Makefile for TUV 5.0
# Use with disort (discrete ordinate), or ps2str (2 stream approximation, 
# pseudo-spherical correction)
#----------
# EXC      : name of executable
# INCLUDES : required include files
# USE_INCL : object files referencing include file (params)
# FOBJS    : all required object files that do not use the include file
#

LIBS   = -L$(NETCDF_DIR)/lib -lnetcdf -lnetcdff -L$(JSONFORTRAN_LIB) -ljsonfortran -L$(NC4FORTRAN_LIB) -lnc4fortran
INCLUDE_MODULES = -I$(NETCDF_DIR)/include -I$(JSONFORTRAN_INC) -I$(NC4FORTRAN_INC)

.SUFFIXES: .o .F90 .f90 .f .mod

EXC = tuv

INCLUDES = params 

USE_INCL = abs_linalgebra.o linalgebra.o grids.o abstract_radXfer.o delta_eddington.o \
           disord_subs.o disord.o rtlink.o \
           rdinp.o rdetfl.o rdxs.o \
           swphys.o swbiol.o swchem.o rxn.o qys.o \
           wshift.o \
	   vpair.o vptmp.o vpo3.o \
	   odrl.o odo3.o \
           setaer.o setalb.o setcld.o setsnw.o \
           setno2.o seto2.o setso2.o \
           sphers.o  \
	   la_srb.o \
	   savout.o \
           newlst.o \
           wrflut.o \
           waters.o \
           swdom.o tuv.o 

FOBJS = tuv_params.o numer.o functs.o orbit.o terint.o
CORE_OBJS =  constants.o string.o assert.o convert.o environment.o iterator.o config.o
RADXFER_OBJS =  netcdf_util.o photo_utils.o abstract.cross_section.type.o base.cross_section.type.o \
                tint.cross_section.type.o o3.tint.cross_section.type.o cross_section_factory.o radXfer_xsect.o

FC = gfortran

FFLAGS = -ggdb -g -ffree-line-length-none -fcheck=bounds,do,pointer -ffpe-trap=zero,overflow,invalid -O0
#FFLAGS = -ggdb -g -ffree-line-length-none -fcheck=bounds,do,pointer -ffpe-trap=zero,overflow,invalid -O2 -fopt-info-all

VPATH = /Users/stacy/Documents/photo_rate_constant_demo/sandbox/core:radXfer_cross_section/utils:radXfer_cross_section/types:radXfer_cross_section

#----------

$(EXC):		$(FOBJS) $(CORE_OBJS) $(RADXFER_OBJS) $(USE_INCL) 
		$(FC) $(FFLAGS) $(FOBJS) $(CORE_OBJS) $(RADXFER_OBJS) $(USE_INCL) $(LIBS) -o $@

$(USE_INCL):	$(INCLUDES)

.F90.o:		
		${FC} ${FFLAGS} -c ${INCLUDE_MODULES} $<

.f90.o:		
		$(FC) $(FFLAGS) -c $*.f90

.f.o:		
		$(FC) $(FFLAGS) -c $*.f

clean:		
		rm -f core *.mod $(EXC) $(USE_INCL) $(FOBJS) $(CORE_OBJS) $(RADXFER_OBJS)
